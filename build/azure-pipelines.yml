trigger:
    branches:
        include:
         - '*'

stages:
- stage: BUILD_AND_TEST
  pool: databinding self hosted interactive
  jobs:
  - job:
    steps:
    - task: GitVersion@4
      inputs:
        updateAssemblyInfo: true
        preferBundledVersion: false
      displayName: Run GitVersion task

    - script: echo %Action%%BuildVersion%
      displayName: Set build version
      env:
        Action: '##vso[build.updatebuildnumber]'
        BuildVersion: $(GitVersion.SemVer)

    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet '
      inputs:
        checkLatest: true

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: T4.FileManager.VisualStudio.sln

    - task: VSBuild@1
      displayName: 'Build solution T4.FileManager.VisualStudio.sln'
      inputs:
        solution: T4.FileManager.VisualStudio.sln
        clean: true

    - powershell: 'Start-Process -FilePath "$(Build.Repository.LocalPath)/T4.FileManager.VisualStudio.sln"'
      displayName: 'Start Visual Studio for testing acceptance criteria'

    - task: VSTest@2
      displayName: 'VsTest - Test Szenarios'
      inputs:
        testAssemblyVer2: |
          **\*AcceptanceCriteria*.dll
          !**\*TestAdapter.dll
          !**\obj\**

    - task: techtalk.techtalk-specflow-plus.specflow-plus.SpecFlowPlus@0
      displayName: 'SpecFlow+ Living Doc'
      inputs:
        projectFilePath: tests/T4.FileManager.VisualStudio.AcceptanceCriteria/Features
        projectName: 'T4 Filemanager for Visual Studio'
        workItemPrefix: 'db-'

    - task: NuGetCommand@2
      displayName: 'NuGet pack'
      inputs:
        command: pack
        packagesToPack: src/T4.FileManager.VisualStudio.nuspec
        versioningScheme: byBuildNumber

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'

- stage: DEPLOY_TEST
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')) 
  pool: databinding self hosted interactive
  variables:
    - group: Test

  jobs:
  - job:
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        patterns: 'drop/**/*'
        path: 'drop'

    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet '
      inputs:
        checkLatest: true

    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        packagesToPush: 'drop/**/*.nupkg;!drop/**/*.symbols.nupkg'
        publishVstsFeed: '$(NuGetFeed)'
        allowPackageConflicts: true